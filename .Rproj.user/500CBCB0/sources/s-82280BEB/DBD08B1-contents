---
title: "6/13"
author: "zzz"
date: "2020/6/13"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.


##Conditional Execution

#if

```{r}
if(condition){
  Body for TRUE
  } #使用條件判斷來產生答案T/F，是個logical。
```

```{r}
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId 

# 之後才執行以下程式
library(stringr)
if(
  str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
  warning("你所輸入的學號不正確")
}
```

```{r}
if(!require(lubridate)){ # condition: 是否「沒安裝lubridate」？
  install.packages("lubridate")
}
lubridate::ymd_hms("2020-07-01 13:00:00 GMT")
```

```{r}
convert_TaiwanDate2WesternDate <- function(twDate){
  
  if(!require("stringr")){
    install.packages("stringr")
  }
  if(!require("lubridate")){
    install.packages("lubridate")
  }
  
  library(stringr)
  regex_pattern <-
    "(?<=民國)[0-9]+(?=年)"
  
  # 取出民國年，計算西元年
  year <- 
    str_extract(
      twDate,
      regex_pattern)
  westernYear <- as.integer(year)+1911
  
  # 替換民國xx年的xx成西元年數字
  str_replace(
    twDate,
    regex_pattern,  # 要換掉的文字
    as.character(westernYear) # 要替換的內容
  ) -> twDate_reformat
  
  lubridate::ymd(twDate_reformat) -> westernDate
  return(westernDate)
}
```

practice1
```{r}
if(!require("clipr")){
    install.packages("clipr")}

if(!require("SOAR")){
    install.packages("SOAR")}

```

practice2
```{r}
askSilly_weather <- function(locationInput,dateInput){

   if(!require("jsonlite")){
    install.packages("jsonlite")}

  library(stringr)
  if(str_detect(locationInput,"台")){
    str_replace(locationInput,"台","臺")->locationInput
  }

  jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
  weather_next36hours

  (weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location

  weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
  (weatherAtLocation$elementName=="MaxT") ->
    pick_MaxT
  (weatherAtLocation$elementName=="MinT") ->
    pick_MinT
  weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
  weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT

  glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}

library(lubridate)
askSilly_weather("台北市",today())
```

#if else

```{r}
if(condition){
  body for TRUE condition
} else {
  body for FALSE condition
}
```

```{r}
myFun <- function(n){
  if(as.logical(n %% 2)){
    fvalue <- -(n+1)/2
  } else {
    fvalue <- n/2
  }
  return(fvalue)
}

myFun(54)
myFun(33)
```

```{r}
jsonlite::fromJSON("https://www.dropbox.com/s/d14j5hp3i5ps657/examSubmissionTimes.json?dl=1") -> examSubmissionTime


head(examSubmissionTime$section)
head(examSubmissionTime$time)
```


只有一個交卷時間
```{r}
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]

deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei") # 

howEarly <- deadline - lubridate::ymd_hms(
  student_i_time, tz="Asia/Taipei") 
print(howEarly)
```

有兩個交卷時間
```{r}
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]

if(student_i_section=="56"){
  deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei")
} else {
  deadline <- lubridate::ymd_hms("2020-05-27 17:00:00", tz="Asia/Taipei")
}

howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
print(howEarly)
```

#if…else if… else

```{r}
if(condition A){
  body for A 
} else if(condition B){
  body for B
} else if(condition C){
  body for C
} else {
  body for none of the above
}
```

```{r}
readline("請輸入你的成績（整數）： ") -> grade # 單獨執行

if(grade >=90){
  print("優")
} else if(grade>=80 & grade<=89){
  print("良")
} else if(grade>=70 & grade<=79){
  print("尚可")
} else {
  print("待加強")
}
```










